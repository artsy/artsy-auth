# frozen_string_literal: true

require 'spec_helper'

# Make sure that https://nvd.nist.gov/vuln/detail/CVE-2015-9284 is mitigated
describe 'mitigate CVE-2015-9284', type: :request do
  describe 'GET /auth/artsy' do
    it 'raises no route matches error' do
      expect do
        get '/auth/artsy'
      end.to raise_error(ActionController::RoutingError, 'No route matches [GET] "/auth/artsy"')
    end
  end

  describe 'POST /auth/artsy without CSRF token' do
    before do
      @allow_forgery_protection = ActionController::Base.allow_forgery_protection
      ActionController::Base.allow_forgery_protection = true

      # OmniAuth 2 catches exceptions and passes them to `OmniAuth.config.on_failure` handler.
      # By default, they are passed to `FailureEndpoint` and redirected to /auth/failure. This
      # configures the handler to re-raise the error which we verify in the test below.
      @omniauth_on_failure = OmniAuth.config.on_failure
      OmniAuth.config.on_failure = proc do |env|
        raise env['omniauth.error']
      end
    end

    after do
      ActionController::Base.allow_forgery_protection = @allow_forgery_protection
      OmniAuth.config.on_failure = @omniauth_on_failure
    end

    it 'raises invalid authenticity token error' do
      expect do
        post '/auth/artsy'
      end.to raise_error(ActionController::InvalidAuthenticityToken)
    end
  end
end
